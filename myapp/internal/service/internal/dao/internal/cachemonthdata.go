// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-09-19 15:24:37
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CachemonthdataDao is the data access object for table cachemonthdata.
type CachemonthdataDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns CachemonthdataColumns // columns contains all the column names of Table for convenient usage.
}

// CachemonthdataColumns defines and stores column names for table cachemonthdata.
type CachemonthdataColumns struct {
	Serverid string // 服务ID
	Platn    string // 角色渠道
	Month    string // month
	Mau      string // 月活跃MAU
}

// cachemonthdataColumns holds the columns for table cachemonthdata.
var cachemonthdataColumns = CachemonthdataColumns{
	Serverid: "serverid",
	Platn:    "platn",
	Month:    "month",
	Mau:      "mau",
}

// NewCachemonthdataDao creates and returns a new DAO object for table data access.
func NewCachemonthdataDao() *CachemonthdataDao {
	return &CachemonthdataDao{
		group:   "default",
		table:   "cachemonthdata",
		columns: cachemonthdataColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CachemonthdataDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CachemonthdataDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CachemonthdataDao) Columns() CachemonthdataColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CachemonthdataDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CachemonthdataDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CachemonthdataDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
