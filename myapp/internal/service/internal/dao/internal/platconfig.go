// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-09-19 15:24:37
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PlatconfigDao is the data access object for table platconfig.
type PlatconfigDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns PlatconfigColumns // columns contains all the column names of Table for convenient usage.
}

// PlatconfigColumns defines and stores column names for table platconfig.
type PlatconfigColumns struct {
	Platcid   string // 渠道ID
	CnameCN   string // 渠道名称_中文
	CnameEN   string // 渠道名称_英文
	Cdescript string // 描述信息
	Cvalid    string // 是否有效
}

// platconfigColumns holds the columns for table platconfig.
var platconfigColumns = PlatconfigColumns{
	Platcid:   "platcid",
	CnameCN:   "cname_CN",
	CnameEN:   "cname_EN",
	Cdescript: "cdescript",
	Cvalid:    "cvalid",
}

// NewPlatconfigDao creates and returns a new DAO object for table data access.
func NewPlatconfigDao() *PlatconfigDao {
	return &PlatconfigDao{
		group:   "default",
		table:   "platconfig",
		columns: platconfigColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PlatconfigDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PlatconfigDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PlatconfigDao) Columns() PlatconfigColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PlatconfigDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PlatconfigDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PlatconfigDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
