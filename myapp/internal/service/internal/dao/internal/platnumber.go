// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-09-19 15:24:37
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PlatnumberDao is the data access object for table platnumber.
type PlatnumberDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns PlatnumberColumns // columns contains all the column names of Table for convenient usage.
}

// PlatnumberColumns defines and stores column names for table platnumber.
type PlatnumberColumns struct {
	Platnid   string // 渠道号ID
	Platn     string // 渠道号
	NnameCN   string // 显示名称_中文
	NnameEN   string // 显示名称_英文
	Ndescript string // 描述信息
	Nvalid    string // 是否有效
}

// platnumberColumns holds the columns for table platnumber.
var platnumberColumns = PlatnumberColumns{
	Platnid:   "platnid",
	Platn:     "platn",
	NnameCN:   "nname_CN",
	NnameEN:   "nname_EN",
	Ndescript: "ndescript",
	Nvalid:    "nvalid",
}

// NewPlatnumberDao creates and returns a new DAO object for table data access.
func NewPlatnumberDao() *PlatnumberDao {
	return &PlatnumberDao{
		group:   "default",
		table:   "platnumber",
		columns: platnumberColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PlatnumberDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PlatnumberDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PlatnumberDao) Columns() PlatnumberColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PlatnumberDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PlatnumberDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PlatnumberDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
