// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-09-19 15:24:37
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OrderinfoDao is the data access object for table orderinfo.
type OrderinfoDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns OrderinfoColumns // columns contains all the column names of Table for convenient usage.
}

// OrderinfoColumns defines and stores column names for table orderinfo.
type OrderinfoColumns struct {
	Orderid     string // 订单id
	Serverid    string // 服务ID
	Platn       string // 角色渠道
	Roleid      string // 角色ID
	Goodsid     string // 商品ID
	PaymoneyCNY string // 充值金额_人民币
	PaymoneyUSD string // 充值金额_美元
	Currency    string // 币种
	Ctime       string // 订单时间
	Day         string // 订单时间day
	Hour        string // 订单时间hour
	Month       string // 订单时间month
}

// orderinfoColumns holds the columns for table orderinfo.
var orderinfoColumns = OrderinfoColumns{
	Orderid:     "orderid",
	Serverid:    "serverid",
	Platn:       "platn",
	Roleid:      "roleid",
	Goodsid:     "goodsid",
	PaymoneyCNY: "paymoney_CNY",
	PaymoneyUSD: "paymoney_USD",
	Currency:    "currency",
	Ctime:       "ctime",
	Day:         "day",
	Hour:        "hour",
	Month:       "month",
}

// NewOrderinfoDao creates and returns a new DAO object for table data access.
func NewOrderinfoDao() *OrderinfoDao {
	return &OrderinfoDao{
		group:   "default",
		table:   "orderinfo",
		columns: orderinfoColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrderinfoDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OrderinfoDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OrderinfoDao) Columns() OrderinfoColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OrderinfoDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrderinfoDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrderinfoDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
