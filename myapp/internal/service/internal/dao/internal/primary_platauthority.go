// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-09-16 10:18:26
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PrimaryPlatauthorityDao is the data access object for table platauthority.
type PrimaryPlatauthorityDao struct {
	table   string                      // table is the underlying table name of the DAO.
	group   string                      // group is the database configuration group name of current DAO.
	columns PrimaryPlatauthorityColumns // columns contains all the column names of Table for convenient usage.
}

// PrimaryPlatauthorityColumns defines and stores column names for table platauthority.
type PrimaryPlatauthorityColumns struct {
	Platflag string // 渠道名称_英文
	Platcid  string // 大平台
	Platnid  string // 渠道ID
}

// primaryPlatauthorityColumns holds the columns for table platauthority.
var primaryPlatauthorityColumns = PrimaryPlatauthorityColumns{
	Platflag: "platflag",
	Platcid:  "platcid",
	Platnid:  "platnid",
}

// NewPrimaryPlatauthorityDao creates and returns a new DAO object for table data access.
func NewPrimaryPlatauthorityDao() *PrimaryPlatauthorityDao {
	return &PrimaryPlatauthorityDao{
		group:   "default",
		table:   "platauthority",
		columns: primaryPlatauthorityColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PrimaryPlatauthorityDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PrimaryPlatauthorityDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PrimaryPlatauthorityDao) Columns() PrimaryPlatauthorityColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PrimaryPlatauthorityDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PrimaryPlatauthorityDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PrimaryPlatauthorityDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
